#!/usr/bin/env python
# Wave script

from trajectory_msgs.msg import JointTrajectoryPoint, JointTrajectory
import numpy as np
import rospy
import time

rospy.init_node("wave")
pub = rospy.Publisher("/rarm_controller/command", JointTrajectory, queue_size=1)

names = [u'RARM_JOINT0', u'RARM_JOINT1', u'RARM_JOINT2', u'RARM_JOINT3', u'RARM_JOINT4', u'RARM_JOINT5']

initpos = np.zeros(6)
wave1 = np.array([4.02507408e-04, -8.42815834e-01, -3.76086535e-01, -8.06545915e-05, -2.06423466e+00, 3.17927198e-04])
wave2 = np.array([4.02507408e-04, -8.42815834e-01, -3.76086535e-01, -8.06545915e-05, -2.06423466e+00, -1.0])
wavepos = [wave1, wave2, wave1, wave2, wave1, initpos]
timing = [2.0, 2.5, 3.0, 3.5, 4.0, 6.0]
trajectory_time = timing[len(timing)-1]

trajectory_message = JointTrajectory()
trajectory_message.joint_names = [x.encode('ascii') for x in names]
for i in range(0, len(wavepos)):
    point = JointTrajectoryPoint()
    point.velocities = np.zeros(6).tolist()
    point.positions = wavepos[i].tolist()
    point.time_from_start = rospy.Duration(timing[i])
    trajectory_message.points.append(point)

trajectory_message.header.stamp = rospy.Time.now()
print("Waving")
print(trajectory_message)
time.sleep(2)
pub.publish(trajectory_message)
